#file text.sfx
#include include/basis.sfx

#GLSL
precision mediump float;

inout vec2 vUV: TEXCOORD_0;

in vec4 aPosition : POSITION_0;
in vec2 aUV : TEXCOORD_0;

void vertex(){
    vec2 pos = 2.0 * (aPosition.xy * _screenparam_.zw) -1.0 ;
    gl_Position = vec4(pos.x,-pos.y,0,1.0);
    vUV = aUV;
}

out vec4 fragColor :TARGET_0;

uniform sampler2D uSampler;

void fragment(){
    vec2 uv =vUV;
    vec4 col = vec4(1.0);
    col.a = texture(uSampler,uv).a;
    fragColor = col;
}
#END

technique text{
    #pipeline queue overlay
    #pipeline zwrite off
    #pipeline ztest always
    #pipeline blend src_alpha one_minus_src_alpha

    #param vs vertex
    #param ps fragment
}