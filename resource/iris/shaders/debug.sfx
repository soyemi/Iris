#file debug.sfx

#include include/basis.sfx

#GLSL
precision mediump float;

in vec4 aPosition : POSITION_0;
void vertex(){
    vec4 pos = aPosition;
    gl_Position = MATRIX_MVP * pos;
}

inout vec2 vPos;

void vertex_raw(){

    mat4 mtxp = mat4(
        1.7320508075688774, 0, 0, 0, 0, 1.7320508075688774, 0, 0, 0, 0, -1.0002000200020003, -1, 0, 0, -0.020002000200020003, 0
    );

    // mtxp = mat4(
    //     1,0,0,0,
    //     0,1,0,0,
    //     0,0,1,0,
    //     0,MATRIX_P[0][0]*0.5,0.5,1
    // );

    vec4 pos = aPosition;

    pos.a = 1.0;

    mat4 temp = MATRIX_M;
    pos =  (MATRIX_MVP* pos );
    pos.a = 1.0;

    vPos = aPosition.xy;

    gl_Position = pos;
}


out vec4 fragColor: TARGET_0;
void fragment(){
    fragColor = vec4(vPos+0.5,0,1.0);
}

#END

technique debug{
    #version 300 es
    #pipeline queue opaque
    #param vs vertex_raw
    #param ps fragment
}
