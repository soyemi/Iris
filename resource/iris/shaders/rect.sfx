#file rect.sfx
#include "basis.sfx"

#GLSL
precision mediump float;


inout vec2 vUV;
inout vec4 vColor;

in vec4 aPosition;
in vec2 aUV;
in vec4 aColor;

void vertex(){
    vec2 pos = 2.0 * (aPosition.xy * _screenparam_.zw) -1.0 ;
    gl_Position = vec4(pos.x,-pos.y,0,1.0);
    vUV = aUV;
    vColor = aColor;
}

out vec4 fragColor;
void fragment(){
    fragColor = vColor;
}

#END

technique rect{
    vs: vertex;
    ps: fragment;
    pipeline:{
        queue: overlay;
        zwrite: off;
        ztest: always;
    }
    property:{
        POSITION_0: aPosition;
        TEXCOORD_0: aUV;
        COLOR_0: aColor;
    }
}