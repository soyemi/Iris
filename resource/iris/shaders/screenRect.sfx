#file screenRect.sfx
#include "basis.sfx"

#GLSL
precision mediump float;

uniform vec4 uRect;

in vec4 aPosition;
in vec2 aUV;

inout vec2 vUV;

void vertex(){
    vec4 pos = aPosition;

    vec4 rect = uRect * SCREEN.zwzw * 2.0;
    pos.xy = ((pos.xy + 0.5) * rect.zw + rect.xy) - 1.0;

    vUV = vec2(aUV.x,1.0 -aUV.y);
    gl_Position = pos;
}


uniform sampler2D uSampler;
out vec4 fragColor;
void fragment(){
    fragColor = texture(uSampler,vUV);
}

#END

technique screenRect{
    vs: vertex;
    ps: fragment;
    pipeline:{
        queue: opaque;
    }
    property:{
        POSITION_0: aPosition;
        TEXCOORD_0: aUV;
    }
}